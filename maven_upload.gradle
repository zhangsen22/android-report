apply plugin: "maven-publish"

//将源码打包
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.getSrcDirs()
}

def mGroupId = "com.jd.mpaas"
def mArtifactId = "jd_report_base"
def mVersion = "1.0.0"

publishing {
    // 配置maven 仓库
    repositories { RepositoryHandler handler ->
        handler.maven {
            // url是必须要配置的
            url = "http://mnexus2.jdxpoc.com/repository/android_test/"
            // 仓库用户名密码
            credentials {
                username = "admin"
                password = "Swk3dbgj"
            }
        }

        handler.mavenLocal()
    }

    publications {
        release(MavenPublication) {
            groupId = mGroupId
            artifactId = mArtifactId
            version = mVersion
            // 必须有这个 否则不会上传AAR包
            afterEvaluate { artifact(tasks.getByName("bundleReleaseAar")) }
            // 上传source，这样使用方可以看到方法注释
            artifact androidSourcesJar

            // pom文件中声明依赖，从而传递到使用方
            pom.withXml {
                //在pom.xml添加依赖关系
                def dependenciesNode = asNode().appendNode('dependencies')
                //拿到所有编译时的依赖
                configurations.implementation.allDependencies.each {
                    if (it.group != null && (it.name != null && "unspecified" != it.name) && it.version != null) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                        dependencyNode.appendNode('scope', 'implementation')
                    }
                }
                configurations.api.allDependencies.each {
                    if (it.group != null && (it.name != null && "unspecified" != it.name) && it.version != null) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                        dependencyNode.appendNode('scope', 'compile')
                    }
                }
            }
        }
    }
}




